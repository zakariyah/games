<html>
  <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
  <title> Choose Your Action</title>
    <link rel='stylesheet' href='/stylesheets/bootstrap.min.css' />
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src='/javascripts/postquiz.js'></script>
    <script type="text/javascript">
     function playSound(){   
                document.getElementById("sound").innerHTML='<audio autoplay="autoplay"><source src="/audio.notification.mp3" type="audio/mpeg" /><source src="/audio.notification.ogg" type="audio/ogg" /><embed hidden="true" autostart="true" loop="false" src="/audio.notification.mp3" /></audio>';
            }
      </script>
  </head>
  <body onunload="">
     <script src="/socket.io/socket.io.js"></script>
    <p style="display:none" id="hiitNumber"><%= hiitNumber %></p>
<script type="text/javascript">
// alert('called1');
window.onbeforeunload = function() {
        return "Please do not leave this page except through the 'Go to payment' button. \n If not, you will be disqualified and will not be paid";
    }
// var alreadyStarted
var timeOfAction = -1;
var timeGivenForAction = 20;    
var hasRecommender = 0;

function makeSelectionImpossible()
{
  document.getElementById('first').disabled = true;
  document.getElementById('second').disabled = true;
}

function showRecommendation(reco)
{
  var options = ['A', 'B'];
  var recomend = document.getElementById('recommender');
  if(reco != null)
    {
      var message = "Recommended Action: " + options[reco - 1];
      recomend.innerHTML = message;
    }
}
function setTimeOfEvent()
{
  
  var countRemain = document.getElementById("countRemain").innerHTML;
  timeOfAction = timeGivenForAction - countRemain;
  // alert(timeOfAction);

}

function changeProgressBar(barId, rvalue, totalValue)
{
  var value = totalValue - rvalue;
  var ariaNow = value  * 100.0 / totalValue;
  var progressBar = document.getElementById(barId);
  progressBar.style.width = Math.floor(ariaNow) + "%";
}

function setTimer(reco)
{
  // alert('I was caleed');
  var mainCount = 20;
  var count = 20;
  var interval = 1000;
  var before = new Date();
  var leftValue = 0;
  var counter=setInterval(timer, 1000);
  showRecommendation(reco);
  function timer()
  {
    // count = count - 1;
    var now = new Date();
    var elapsedTime = (now.getTime() - before.getTime());
    elapsedTime = Math.floor(elapsedTime/interval); 
    // leftValue += Math.floor(elapsedTime/interval);
    count = mainCount - elapsedTime;
    if (count < 0)
    {
      document.getElementById("timer").innerHTML = "<span id='countRemain'>Please, we are still expecting the agent's choice......</span>"; // watch for spelling
      chatRoom();
      makeSelectionImpossible();
      clearInterval(counter);
      return;
    }
  document.getElementById("timer").innerHTML = "<span id='countRemain'>" + count + "</span> secs remaining..."; // watch for spelling
    changeProgressBar('progressBarMain', count, 20);
  }
}

var countBeginning = 300;
function setTimerBeginning()
{
  
  var counter=setInterval(timer, 1000);
  // alert('called here');
function timer()
  {
    countBeginning = countBeginning - 1;
    if (countBeginning < 0)
    {
      waitingRoomEnded();
      clearInterval(counter);
      return;
    }
    // alert('done');
  document.getElementById("timerBegin").innerHTML = countBeginning + " secs remaining"; // watch for spelling
  }
}

function showGamePayoffMatrix()
{
  var htmlString = "<div class=\"alert alert-warning\"> NEW ROUND </div>";
  htmlString += "";
  htmlString += ("<p> <strong class=\"alert alert-success\">Payoff Structure</strong></p><table class='table table-bordered table-condensed'><tr class=\"danger\"><th>Option</th> <th>You will get</th> <th>The agent  will get</th> </tr><tr  class=\"danger\"><td><input type=\"radio\" name=\"choiceAction\" id=\'first\' onclick=\'return setTimeOfEvent()\' value=\"1\"> A: </td><td>-2</td><td>5</td></tr><tr  class=\"danger\"><td><input type=\"radio\" name=\"choiceAction\" id=\'second\' onclick=\'return setTimeOfEvent()\' value=\"2\"> B: </td><td>0</td><td>0</td></tr></table><div style='border: 1px #bce8f1 solid;   line-height: 120%;   font-size: 36px;  text-align: center; background-color: #d9edf7;   margin: 5px;'> <span id=\'timer\'></span> </div>" + "<div class='progress'><div id='progressBarMain' class='progress-bar progress-bar-success progress-bar-striped active' role='progressbar' aria-valuenow='5' aria-valuemin='0' aria-valuemax='100' style='width: 5%;'></div></div>"); 



  var actionElement = document.getElementById('actions');
    actionElement.innerHTML = htmlString;    
}

function showPlayerChoicesForGivenTime(reco)
{
  var timeForChoices = 10;
  document.getElementById('recommender').innerHTML = '';
  var counter=setInterval(timer, 1000);
  // alert('called here');
  function timer()
  {
    timeForChoices = timeForChoices - 1;
    if (timeForChoices < 0)
    {
      setTimer(reco);
      showGamePayoffMatrix();
      clearInterval(counter);
      return;
    }
    // alert('done');
  document.getElementById("nextRoundCounter").innerHTML = "<span style='border: 1px #bce8f1 solid;   line-height: 120%;   font-size: 36px;  text-align: center; background-color: #d9edf7;   margin: 5px;'>Next round starts in " +  timeForChoices + " seconds ... </span>"; // watch for spelling
  changeProgressBar('progressBar', timeForChoices, 10);
  }
}


function endGame(cummulativeScore, numberOfRounds)
{
        var htmlString = "<div class=\"alert alert-warning\"> Thank you very much, The game is over. You had a total of " + cummulativeScore  +" points</div>";
        htmlString += "<div class=\"alert alert-warning\"> Please fill in the survey below </div>";
        var heHadRecommenders = (hasRecommender != 0);
        htmlString += postQuizQuestions(heHadRecommenders, cummulativeScore, numberOfRounds);

        var actionsElement = document.getElementById('actions');
        actionsElement.innerHTML = htmlString;
        // goToURL("./postquizsurvey");
        document.getElementById('recommender').innerHTML = '';
}
var socket = io.connect('http://ec2-54-191-154-185.us-west-2.compute.amazonaws.com:4000/');

// var socket = io.connect('http://localhost:4000');
    // var socketid = socket.id;
socket.on('serverMessage', function(content) {
    var options = ['A', 'B'];
  //   alert('server message was called');
  // var defectElement = document.getElementById('voice');
    var defectElement = document.getElementById('actions'); // block actions for some time
    defectElement.innerHTML = content.text;
  
    
    var numberOfRounds = content.rounds;
    // alert("numberOfRounds is " + numberOfRounds);
    var reco = content.recommendation;
    hasRecommender = content.recommenderOptionValue;
    if(content.count == 0)
    {
      document.getElementById('hehasrecommender').innerHTML = hasRecommender + "";
    }
    
    if(content.count == 0)
    {
      // clearSelection();
      setTimer(reco);
      playSound();
      // alert(reco);
    }
    else if(content.count < numberOfRounds)
    {
      // alert('here2');
      showPlayerChoicesForGivenTime(reco);
      // setTimer();
    }
    else
    {
      // alert("here " + content.count + ": " + numberOfRounds + ":" + JSON.stringify(content));
      var cummulative = content.cumm;
      endGame(cummulative, numberOfRounds);
    }
});

  socket.on('start', function() {
  // alert('here1');
   showGamePayoffMatrix();
    // alert('here');
    countBeginning = 0;
 
});

// alert('I was called 24');

socket.on('disconnectMessage', function(content) {
  // var defectElement = document.getElementById('disconnect');
  //   defectElement.innerHTML = content;
  endGame(cummulative, content.cummScoreK, content.roundK);

});
  
function waitingRoomEnded()
{
  // alert("here man");
  socket.emit('waitingTimeElapsed');  
}

function chatRoom()
{
  var val = 0;
  if(document.getElementById('first').checked)
  {
    val = 1;
  }
  else if(document.getElementById('second').checked)
  {
    val = 2;
  }
  socket.emit('clientMessage', {'gamePlay' : val, 'timeOfAction' : timeOfAction});  
  // alert("was called");
  // socket.emit('clientMessage', val); 
  timeOfAction = -1; 

  return true;
}

//get hiit number
var hiitNumber = document.getElementById("hiitNumber").innerHTML;
// for starting game
socket.emit('join', hiitNumber);
// alert('called');
setTimerBeginning();
// for timer starting
</script>
    <div class='container'>
<!-- <div class='col-md-1'>
</div> -->
<div class='col-md-1'></div>
<div class='col-md-10'>
    <div class='row' id='actions'>
      <p>Welcome</p>
      <div class="alert alert-warning"> Please wait while we initiate the agent.  <span id='timerBegin'></span></div>
</div>
<div class="row alert alert-warning" id='recommender'>
      
  </div>
  </div>
<!--     <button onclick='return startgame()'>Start</button> -->
    <div class='col-md-1'>
      <div class="row" id='voice'>
    
  </div>
  
  <div class="row">
    <div id='disconnect'>
      
    </div>
  </div>
  </div>
</div>
<!-- <div class='col-md-1'>
</div> -->
<div>
<span style='display:none' id='hehasrecommender'>0</span>
  </div>

<div id="sound"></div>

  </body>
</html>